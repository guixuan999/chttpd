chttpd is a simple httpd implemented with golang, but initialized by a c program and also it's request handling is delegated to c program

build static linked app
1. build libapi.a (C source)
cd chttpd/c
gcc -Wall -c -o libapi.o api.c
ar rcs libapi.a libapi.o 

2. build chttpd.a (Go source)
cd chttpd
go build -buildmode=c-archive --ldflags '-extldflags "-static"' -o chttpd.a gx.io/cgo/chttpd

3. build chttpd (C source)
cd chttpd/c
cp api.h ../          # without this copy, you will get error: "api.h" not found, in the next step.
gcc -o chttpd main.c ../chttpd.a -L. -lpthread -lapi

4. And now you can run chttpd, enjoy!


build dynamic linked app
1. build libapi.so
gcc -shared -o libapi.so api.c

2. build libchttpd.so
go build -buildmode=c-shared -o libchttpd.so gx.io/cgo/chttpd

3. build chttpd
gcc -o chttpd  main.c -L. -L.. -lpthread -lapi -lchttpd

4. run chttpd
LD_LIBRARY_PATH=.:.. ./chttpd
